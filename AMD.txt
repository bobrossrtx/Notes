====================================================================================
|                                Addressing Data in Memory                         |
|                                Author: Owen Boreham                              |
|                                Date: 6/29/2021                                   |
====================================================================================

The process through which the processor controls the execution is refered 
as the fetch-decode-execute cycle or the execution cycle. it consists of
three continuous steps.
  - Fetching the instruction from memory
  - Decoding or identifying the instruction
  - Executing the instruction
The processor may access one or more bytes of memory at a time. 
Let us consider a hexadecimal number 0725H. Thiss number will require
two bytes of memory. The high-order byte or most significant byte is 07
and the low-order byte is 25.

The processor stores data in reverse-byte sequence. i.e., a low-order 
byte is stored in a low memory address and a high-order byte in high 
memory address. So, if the processor brings the value 0725H from register
to memory, it will transfer 25 first to the lower memory adress and 07 
to the next memory address.
  Register  [07][25]
  Memory    [25][07]
             x   x+1
  x: memory address

When the processor gets the numeric data from memory to register, it again 
reverses the bytes. There are two kinds of memory addresses -
  - Absolute adress - a direct reference of specific location.
  - Segment address (of offset) - starting address of a memory segment
    with the offset value.